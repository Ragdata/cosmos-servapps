cosmos-installer:
    post-install:
        type: info
        label: "The SSH port for this container is 222"
name: gitea-actions
services:
    # GITEA
    "{ServiceName}":
        container_name: "{ServiceName}"
        hostname: "{ServiceName}"
        image: gitea/gitea:latest
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "curl", "-f", "http://{ServiceName}:3000"]
            interval: 10
            timeout: 10
            start_period: 30
            retries: 3
        environment:
            TZ: "Australia/Brisbane"
            USER_GID: "1000"
            USER_UID: "1000"
        network_mode: bridge
        ports:
            - 3002:3000/tcp
            - 222:22/tcp
        volumes:
            - type: volume
              source: "{ServiceName}-data"
              target: /data
        routes:
            - name: "{ServiceName}"
              description: "Expose {ServiceName} to the web"
              useHost: true
              target: "http://{ServiceName}:3000"
              mode: "SERVAPP"
              timeout: 14400000
              throttlePerMinute: 12000
              BlockCommonBots: true
              Smartshield:
                Enabled: true
        labels:
            cosmos.stack: "{ServiceName}"
            cosmos.stack.main: true
            cosmos-auto-update: true
            cosmos-icon: https://ragdata.github.io/cosmos-servapps/servapps/gitea-actions/icon.png
            cosmos-force-network-secured: true
    # GITEA RUNNER
    "{ServiceName}-runner":
        container_name: "{ServiceName}-runner"
        hostname: "{ServiceName}-runner"
        image: docker.io/gitea/act_runner:latest
        restart: unless-stopped
        environment:
            CONFIG_FILE: /data/gitea/conf/config.yaml
            GITEA_INSTANCE_URL: http://{ServiceName}:3000
            GITEA_RUNNER_REGISTRATION_TOKEN: ReplaceWithToken
            GITEA_RUNNER_NAME: "{ServiceName}-runner"
            GITEA_RUNNER_LABELS: null
        volumes:
            - type: bind
              source: /data/act_runner
              target: /data
            - type: bind
              source: /var/run/docker.sock
              target: /var/run/docker.sock
        depends_on:
            "{ServiceName}":
                condition: service_healthy
                restart: true
        network_mode: bridge
        labels:
            cosmos.stack: "{ServiceName}"
            cosmos-auto-update: true
            cosmos-icon: https://ragdata.github.io/cosmos-servapps/servapps/gitea-actions/icon.png
            cosmos-force-network-secured: true
